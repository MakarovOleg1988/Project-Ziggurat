//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Player/New Input System/New Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Ziggurat
{
    public partial class @NewControls : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @NewControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""New Controls"",
    ""maps"": [
        {
            ""name"": ""Actionmap"",
            ""id"": ""dc938be1-65bc-454c-a5aa-7714eda5f5d0"",
            ""actions"": [
                {
                    ""name"": ""MovementUp"",
                    ""type"": ""Value"",
                    ""id"": ""df7a92bd-71a9-4e6b-844b-0e3c32388ba6"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MovementHeight"",
                    ""type"": ""Value"",
                    ""id"": ""04f74ce4-ddb9-454e-8995-dddc954254d2"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MovementRight"",
                    ""type"": ""Value"",
                    ""id"": ""0c3e8fce-4539-4eea-a3b4-c425c512db30"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""d3eb2d40-c042-4135-8ce3-c83c5b37ab61"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementUp"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""39b1671c-cac0-4d4a-b2ad-e533f23f5e87"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6effbada-5415-4293-b3aa-954ce4382329"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""a4d17356-0ee1-4e98-bc5b-f5dfe1029580"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementRight"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""032f50df-b0be-445f-9ffa-23332f84f5df"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a2f3a34b-364e-49f3-a523-80d9beb16e57"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""22930ea2-bccd-4a56-a744-7a1c0d948abf"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementHeight"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e4aff394-b7a1-443c-9cb7-c5e184160512"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementHeight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""0dbb9227-a494-497f-98fa-1ff6aad4a4ac"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementHeight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Actionmap
            m_Actionmap = asset.FindActionMap("Actionmap", throwIfNotFound: true);
            m_Actionmap_MovementUp = m_Actionmap.FindAction("MovementUp", throwIfNotFound: true);
            m_Actionmap_MovementHeight = m_Actionmap.FindAction("MovementHeight", throwIfNotFound: true);
            m_Actionmap_MovementRight = m_Actionmap.FindAction("MovementRight", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Actionmap
        private readonly InputActionMap m_Actionmap;
        private IActionmapActions m_ActionmapActionsCallbackInterface;
        private readonly InputAction m_Actionmap_MovementUp;
        private readonly InputAction m_Actionmap_MovementHeight;
        private readonly InputAction m_Actionmap_MovementRight;
        public struct ActionmapActions
        {
            private @NewControls m_Wrapper;
            public ActionmapActions(@NewControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @MovementUp => m_Wrapper.m_Actionmap_MovementUp;
            public InputAction @MovementHeight => m_Wrapper.m_Actionmap_MovementHeight;
            public InputAction @MovementRight => m_Wrapper.m_Actionmap_MovementRight;
            public InputActionMap Get() { return m_Wrapper.m_Actionmap; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(ActionmapActions set) { return set.Get(); }
            public void SetCallbacks(IActionmapActions instance)
            {
                if (m_Wrapper.m_ActionmapActionsCallbackInterface != null)
                {
                    @MovementUp.started -= m_Wrapper.m_ActionmapActionsCallbackInterface.OnMovementUp;
                    @MovementUp.performed -= m_Wrapper.m_ActionmapActionsCallbackInterface.OnMovementUp;
                    @MovementUp.canceled -= m_Wrapper.m_ActionmapActionsCallbackInterface.OnMovementUp;
                    @MovementHeight.started -= m_Wrapper.m_ActionmapActionsCallbackInterface.OnMovementHeight;
                    @MovementHeight.performed -= m_Wrapper.m_ActionmapActionsCallbackInterface.OnMovementHeight;
                    @MovementHeight.canceled -= m_Wrapper.m_ActionmapActionsCallbackInterface.OnMovementHeight;
                    @MovementRight.started -= m_Wrapper.m_ActionmapActionsCallbackInterface.OnMovementRight;
                    @MovementRight.performed -= m_Wrapper.m_ActionmapActionsCallbackInterface.OnMovementRight;
                    @MovementRight.canceled -= m_Wrapper.m_ActionmapActionsCallbackInterface.OnMovementRight;
                }
                m_Wrapper.m_ActionmapActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @MovementUp.started += instance.OnMovementUp;
                    @MovementUp.performed += instance.OnMovementUp;
                    @MovementUp.canceled += instance.OnMovementUp;
                    @MovementHeight.started += instance.OnMovementHeight;
                    @MovementHeight.performed += instance.OnMovementHeight;
                    @MovementHeight.canceled += instance.OnMovementHeight;
                    @MovementRight.started += instance.OnMovementRight;
                    @MovementRight.performed += instance.OnMovementRight;
                    @MovementRight.canceled += instance.OnMovementRight;
                }
            }
        }
        public ActionmapActions @Actionmap => new ActionmapActions(this);
        public interface IActionmapActions
        {
            void OnMovementUp(InputAction.CallbackContext context);
            void OnMovementHeight(InputAction.CallbackContext context);
            void OnMovementRight(InputAction.CallbackContext context);
        }
    }
}
